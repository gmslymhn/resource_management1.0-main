{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'App-Register',\n  data() {\n    let validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.registerForm.checkPass !== '') {\n          this.$refs.registerForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    let validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.registerForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      registerForm: {\n        userName: '',\n        // 账号\n        pass: '',\n        // 密码\n        checkPass: '',\n        peopleName: '',\n        // 姓名\n        studentNum: '',\n        // 学号\n        email: '' // 邮箱\n      },\n\n      rules: {\n        userName: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 9,\n          message: '长度2~9个字符',\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        peopleName: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        studentNum: [{\n          required: true,\n          message: '请输入学号',\n          trigger: 'blur'\n        }, {\n          min: 15,\n          max: 15,\n          message: '长度15个数字',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 注册按钮\n    Register() {\n      this.axios.post(\"http://localhost:xxxx/user/register\", this.registerForm).then(response => {\n        let data = response.data;\n        if (data.success) {\n          this.registerForm = {};\n          this.$router.push({\n            path: \"/Login\"\n          });\n          this.$message({\n            showClose: true,\n            type: \"success\",\n            message: \"注册成功，前往登录\"\n          });\n        }\n      });\n    },\n    // 返回登录界面\n    toLogin() {\n      this.$router.push({\n        path: \"/Login\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass","rule","value","callback","Error","registerForm","checkPass","$refs","validateField","validatePass2","pass","userName","peopleName","studentNum","email","rules","required","message","trigger","min","max","validator","methods","Register","axios","post","then","response","success","$router","push","path","$message","showClose","type","toLogin"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div id=\"poster\">\r\n    <el-form class=\"registerContainer\" :model=\"registerForm\" status-icon :rules=\"rules\" ref=\"registerForm\">\r\n      <h3 class=\"registerTitle\">\r\n        系统注册\r\n      </h3>\r\n\r\n      <el-scrollbar class=\"scrollbar\">\r\n\r\n        <div class=\"scrollbarDiv\" >\r\n\r\n          <!-- 账号 -->\r\n          <el-form-item label=\"\" prop=\"userName\">\r\n            <el-input \r\n              v-model=\"registerForm.userName\" \r\n              autocomplete=\"off\" \r\n              placeholder=\"请输入账号\"\r\n              prefix-icon=\"el-icon-user-solid\"\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 密码 -->\r\n          <el-form-item label=\"\" prop=\"pass\">\r\n            <el-input \r\n              type=\"password\" \r\n              v-model=\"registerForm.pass\" \r\n              autocomplete=\"off\" \r\n              placeholder=\"请输入密码\"\r\n              prefix-icon=\"el-icon-lock\">\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 确认密码 -->\r\n          <el-form-item label=\"\" prop=\"checkPass\">\r\n            <el-input \r\n              type=\"password\" \r\n              v-model=\"registerForm.checkPass\" \r\n              autocomplete=\"off\" \r\n              placeholder=\"请重新输入密码\"\r\n              prefix-icon=\"el-icon-lock\">\r\n            </el-input>\r\n          </el-form-item>\r\n          \r\n          <!-- 姓名 -->\r\n          <el-form-item label=\"\" prop=\"peopleName\">\r\n            <el-input \r\n              v-model=\"registerForm.peopleName\" \r\n              autocomplete=\"off\" \r\n              placeholder=\"请输入你的姓名\"\r\n              prefix-icon=\"el-icon-user-solid\"\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 学号 -->\r\n          <el-form-item label=\"\" prop=\"studentNum\">\r\n            <el-input \r\n              v-model.number=\"registerForm.studentNum\" \r\n              autocomplete=\"off\" \r\n              placeholder=\"请输入你的学号\"\r\n              prefix-icon=\"el-icon-tickets\"\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <!-- 邮箱 -->\r\n          <el-form-item label=\"\" prop=\"email\">\r\n            <el-input \r\n              v-model=\"registerForm.email\" \r\n              autocomplete=\"off\" \r\n              placeholder=\"请输入邮箱\"\r\n              prefix-icon=\"el-icon-message\"\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n        </div>\r\n      </el-scrollbar>\r\n\r\n\r\n      <!-- 提交按钮 -->\r\n      <el-form-item class=\"button\">\r\n        <el-button class=\"button1\" type=\"warning\" round @click=\"Register()\">注册</el-button>\r\n        <el-button type=\"primary\" round @click=\"toLogin\">返回登录</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App-Register',\r\n  data() {\r\n    let validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.registerForm.checkPass !== '') {\r\n          this.$refs.registerForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    let validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.registerForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      registerForm: {\r\n        userName: '',   // 账号\r\n        pass: '',       // 密码\r\n        checkPass: '',\r\n        peopleName:'',  // 姓名\r\n        studentNum:'',  // 学号\r\n        email:'',       // 邮箱\r\n      },\r\n      rules: {\r\n        userName: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n          { min: 2, max: 9, message: '长度2~9个字符', trigger: 'blur'}\r\n        ],\r\n        pass: [\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        checkPass: [\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ],\r\n        peopleName: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' }\r\n        ],\r\n        studentNum: [\r\n          { required: true, message: '请输入学号', trigger: 'blur' },\r\n          { min: 15, max: 15, message: '长度15个数字', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' }\r\n        ]\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 注册按钮\r\n    Register() {\r\n      this.axios.post(\"http://localhost:xxxx/user/register\",this.registerForm).then((response) => {\r\n        let data = response.data\r\n        if(data.success){\r\n          this.registerForm = {}\r\n          this.$router.push({path:\"/Login\"})\r\n          this.$message({\r\n            showClose:true,\r\n            type:\"success\",\r\n            message:\"注册成功，前往登录\",\r\n          })\r\n        }\r\n      })\r\n      \r\n    },\r\n\r\n    // 返回登录界面\r\n    toLogin(){\r\n      this.$router.push({path:\"/Login\"})\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  #poster{\r\n    height: 100%;\r\n    width: 100%;\r\n    min-width: 1000px;\r\n    min-height: 800px;\r\n    position: fixed;\r\n    background-position: center center;\r\n    background-size: cover;\r\n    background-image: url(\"../assets/loginBackground.jpg\");\r\n    overflow: auto;\r\n    padding-top: 150px;\r\n  }\r\n  .registerContainer{\r\n    width: 400px;\r\n    height: 350px;\r\n    transform: translate(-50%);\r\n    margin-left: 50%;\r\n    padding: 80px 100px;\r\n    background-color:rgba(255,255,255,0.15);\r\n    box-shadow: 5px 5px 10px rgb(85, 238, 71);\r\n    border-radius: 20px;\r\n  }\r\n  .registerTitle {\r\n    margin-bottom: 20px;\r\n    line-height: 50px;\r\n    text-align: center;\r\n    font-size: 250%;\r\n    font-weight: bolder;\r\n    color: white;\r\n    text-shadow: 2px 2px 4px #000000;\r\n  }\r\n  .scrollbar{\r\n    width: 100%;\r\n    height: 75%;\r\n    \r\n  }\r\n  .scrollbarDiv{\r\n    width: 85%;\r\n    margin: 0 auto;\r\n    overflow:hidden\r\n  }\r\n  .scrollbar >>> .el-scrollbar__wrap{\r\n    overflow-x: hidden;\r\n  }\r\n  .scrollbar >>> .el-scrollbar__thumb{\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n  .button{\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n  .button1{\r\n    margin-right: 40px;\r\n  }\r\n</style>"],"mappings":";AA2FA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,YAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,YAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,YAAA,CAAAK,IAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,YAAA;QACAM,QAAA;QAAA;QACAD,IAAA;QAAA;QACAJ,SAAA;QACAM,UAAA;QAAA;QACAC,UAAA;QAAA;QACAC,KAAA;MACA;;MACAC,KAAA;QACAJ,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,IAAA,GACA;UAAAW,SAAA,EAAArB,YAAA;UAAAkB,OAAA;QAAA,EACA;QACAZ,SAAA,GACA;UAAAe,SAAA,EAAAZ,aAAA;UAAAS,OAAA;QAAA,EACA;QACAN,UAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,UAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,KAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,OAAA;IACA;IACAC,SAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,6CAAApB,YAAA,EAAAqB,IAAA,CAAAC,QAAA;QACA,IAAA5B,IAAA,GAAA4B,QAAA,CAAA5B,IAAA;QACA,IAAAA,IAAA,CAAA6B,OAAA;UACA,KAAAvB,YAAA;UACA,KAAAwB,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;UACA,KAAAC,QAAA;YACAC,SAAA;YACAC,IAAA;YACAjB,OAAA;UACA;QACA;MACA;IAEA;IAEA;IACAkB,QAAA;MACA,KAAAN,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}